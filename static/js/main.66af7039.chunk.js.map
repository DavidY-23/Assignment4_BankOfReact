{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Debits.js","components/Credits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","document","title","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","htmlFor","type","onChange","Debits","debitView","listofDebits","debitsArray","map","eachDebit","description","amount","date","addDebit","currentDate","Date","currentMonth","getUTCMonth","currentDay","getUTCDate","currentTime","getUTCFullYear","prevState","toFixed","a","axios","get","response","data","step","Credits","creditView","listofCredits","creditsArray","eachCredit","addCredit","Math","abs","App","logInInfo","newUser","currentUser","linktoAPICredit","responseCredit","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.66af7039.chunk.js","sourcesContent":["// src/components/AccountBalance.js\r\n\r\nimport React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        Balance: {this.props.accountBalance}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountBalance;","// src/components/Home.js\r\n// The Home component is used to demonstrate the use of Link.\r\n\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  componentDidMount(){\r\n    document.title = \"Bank of React\"\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\r\n        <h1>Bank of React</h1>\r\n\r\n        <Link to=\"/userProfile\">User Profile</Link>\r\n        <br/>\r\n        <Link to=\"/login\">Login</Link>\r\n        <br/>\r\n        <Link to=\"/credit\">Credits</Link>\r\n        <br/>\r\n        <Link to=\"/debit\">Debits</Link>\r\n        \r\n        <AccountBalance accountBalance={this.props.accountBalance}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","// src/components/UserProfile.js\r\n// The UserProfile component is used to demonstrate the use of Route and Link.\r\n\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  componentDidMount(){\r\n    document.title = \"User Profile\"\r\n  }\r\n  render() {\r\n    return (\r\n        <div>\r\n          <h1>User Profile</h1>\r\n\r\n          <div>Username: {this.props.userName}</div>\r\n          <div>Member Since: {this.props.memberSince}</div>\r\n          \r\n          <Link to=\"/\">Return to Home</Link>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","// src/components/Login.js\r\n// The LogIn component is used to demonstrate the use of Redirect.\r\n\r\nimport React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass LogIn extends Component {\r\n  constructor () {  // Create and initialize state\r\n    super()\r\n    this.state = {\r\n      user: {\r\n        userName: '',\r\n        password: ''\r\n      },\r\n      redirect: false\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    document.title = \"Login\"\r\n  }\r\n  // When the user name input is changed, capture the input and update the state (user.userName)\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user}\r\n    const inputField = e.target.name\r\n    const inputValue = e.target.value\r\n    updatedUser[inputField] = inputValue\r\n\r\n    this.setState({user: updatedUser})\r\n  }\r\n\r\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)\r\n    this.setState({redirect: true})\r\n  }\r\n  \r\n  render () {\r\n    if (this.state.redirect) {  // Redirect to \"User Profile\" page when \"Log In\" button is clicked\r\n      return (<Redirect to=\"/userProfile\"/>)\r\n    }\r\n    // Render the login form\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"userName\">User Name</label>\r\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>                  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LogIn","// src/components/Debits.js\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios'; \r\n\r\nclass Debits extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      accountBalance: this.props.accountBalance,\r\n      debitsArray: this.props.debitsArray,\r\n    };\r\n  }\r\n\r\n  //Parsing API\r\n  async componentDidMount() {\r\n    document.title = \"Debits\"\r\n    let linktoAPI = 'https://moj-api.herokuapp.com/debits';\r\n    let response = await axios.get(linktoAPI);\r\n    this.setState({debitsArray: response.data})\r\n  }\r\n  \r\n\r\n  debitView = () => {\r\n    const listofDebits = this.state.debitsArray.map((eachDebit) => \r\n    \r\n      <li key={eachDebit.description}>{eachDebit.description}, ${eachDebit.amount}, {eachDebit.date}</li>\r\n    ) \r\n    return (\r\n      <ul>{listofDebits}</ul>\r\n    )\r\n  }\r\n\r\n\r\n  addDebit = (e) => {\r\n    e.preventDefault()\r\n    var currentDate = new Date();\r\n    var currentMonth = currentDate.getUTCMonth() + 1\r\n    var currentDay = currentDate.getUTCDate()\r\n    var currentYear = currentDate.getUTCFullYear()\r\n    var currentTime = currentYear + '-' + currentMonth + '-' + currentDay\r\n    if (e.target.description.value === \"\" || e.target.amount.value === \"\")\r\n      return;\r\n    this.setState((prevState)=> ({\r\n      accountBalance: (prevState.accountBalance - e.target.amount.value).toFixed(2),\r\n      debitsArray: [...prevState.debitsArray, {description: e.target.description.value, amount: e.target.amount.value, date: currentTime}]\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <h1>Debits</h1>\r\n      {this.debitView()}\r\n      <h2>Balance: {this.state.accountBalance}</h2>\r\n      <form onSubmit={this.addDebit}>\r\n        <input type=\"text\" name=\"description\" />\r\n        <input type=\"number\" step=\"0.01\"  name=\"amount\" />\r\n        <button type=\"submit\">Add Debit</button>\r\n      </form>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Debits;","// src/components/Credits.js\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios'; \r\n\r\nclass Credits extends Component {\r\n    \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      accountBalance: this.props.accountBalance,\r\n      creditsArray: this.props.creditsArray,\r\n    };\r\n  }\r\n\r\n  //Parsing API\r\n  async componentDidMount() {\r\n    document.title = \"Credits\"\r\n    let linktoAPI = 'https://moj-api.herokuapp.com/credits';\r\n    let response = await axios.get(linktoAPI);\r\n    this.setState({creditsArray: response.data})\r\n  }\r\n\r\n  creditView = () => {\r\n    const listofCredits = this.state.creditsArray.map((eachCredit) => \r\n    \r\n      <li key={eachCredit.description}>{eachCredit.description}, ${eachCredit.amount}, {eachCredit.date}</li>\r\n    ) \r\n    return (\r\n      <ul>{listofCredits}</ul>\r\n    )\r\n  }\r\n\r\n\r\n  addCredit = (e) => {\r\n    e.preventDefault()\r\n    var currentDate = new Date();\r\n    var currentMonth = currentDate.getUTCMonth() + 1\r\n    var currentDay = currentDate.getUTCDate()\r\n    var currentYear = currentDate.getUTCFullYear()\r\n    var currentTime = currentYear + '-' + currentMonth + '-' + currentDay\r\n    if (e.target.description.value === \"\" || e.target.amount.value === \"\")\r\n      return;\r\n    this.setState((prevState)=> ({\r\n      accountBalance: (prevState.accountBalance -  -Math.abs(e.target.amount.value)).toFixed(2),\r\n      creditsArray: [...prevState.creditsArray, {description: e.target.description.value, amount: e.target.amount.value, date: currentTime}]\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <h1>Credit</h1>\r\n      {this.creditView()}\r\n      <h2>Balance: {this.state.accountBalance}</h2>\r\n      <form onSubmit={this.addCredit}>\r\n        <input type=\"text\" name=\"description\" />\r\n        <input type=\"number\" step=\"0.01\" name=\"amount\" />\r\n        <button type=\"submit\">Add Credit</button>\r\n      </form>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Credits;","// src/App.js\r\n\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Debit from './components/Debits';\r\nimport Credit from './components/Credits';\r\nimport axios from 'axios'; \r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super(); \r\n    this.state = {\r\n      accountBalance: 14568.27,\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '07/23/96',\r\n      },\r\n      debitsArray: [],\r\n      creditsArray: [],\r\n    }\r\n  }\r\n\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {  \r\n    const newUser = {...this.state.currentUser}\r\n    newUser.userName = logInInfo.userName\r\n    this.setState({currentUser: newUser})\r\n  }\r\n\r\n  //Parses API for debits\r\n  async componentDidMount() {\r\n    let linktoAPI = 'https://moj-api.herokuapp.com/debits';\r\n    let linktoAPICredit = 'https://moj-api.herokuapp.com/credits'\r\n    let response = await axios.get(linktoAPI);\r\n    let responseCredit = await axios.get(linktoAPICredit)\r\n    this.setState({debitsArray: response.data})\r\n    this.setState({creditsArray: responseCredit.data})\r\n  }\r\n\r\n\r\n\r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {  \r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance}/>);\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince}  />\r\n    );\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)  // Pass props to \"LogIn\" component\r\n    const DebitComponent = () => (<Debit accountBalance={this.state.accountBalance} debitsArray={this.state.debitsArray}/>);\r\n    const CreditComponent = () => (<Credit accountBalance={this.state.accountBalance} creditsArray={this.state.creditsArray}/>);\r\n\r\n    return (\r\n      <Router basename=\"/Assignment4_BankOfReact\">\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent}/>\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\r\n          <Route exact path=\"/login\" render={LogInComponent}/>\r\n          <Route exact path=\"/debit\" render={DebitComponent}/>\r\n          <Route exact path=\"/credit\" render={CreditComponent}/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}